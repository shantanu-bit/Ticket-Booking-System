/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;
import ticket.booking.Util.userServiceUtil;
import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.userBookingService;
import java.io.IOException;
import java.util.*;

public class App {

    public static void main(String[] args) throws IOException {
        System.out.println("Running Train Booking System");
        Scanner sc = new Scanner(System.in);
        int option = 0;
        userBookingService userBooking ;

        try{
            userBooking = new userBookingService();
        } catch (IOException e) {
            System.out.println("There is something wrong");
            e.printStackTrace();
            return;
        }

        Train trainSelectedForBooking = null;
        while(option != 7){
            System.out.println("choose option: ");
            System.out.println("1. Sign Up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a seat");
            System.out.println("6. Cancel my Booking");
            System.out.println("7. Exit the App");

            option = sc.nextInt();

            switch (option){
                case 1:
                    System.out.println("Enter your name: ");
                    String nameToSignUp = sc.next();
                    System.out.println("Enter a password to signup: ");
                    String passwordToSignUp = sc.next();
                    User userToSignUp = new User(
                            nameToSignUp, passwordToSignUp, userServiceUtil.hashPassword(passwordToSignUp),
                            new ArrayList<>(), UUID.randomUUID().toString()
                    );
                    userBooking.signUp(userToSignUp);
                    break;
                case 2:
                    System.out.println("Enter your name: ");
                    String nameToLogin = sc.next();
                    System.out.println("Enter your password: ");
                    String passwordToLogin = sc.next();
                    User userToLogin = new User(
                            nameToLogin, passwordToLogin, "",
                            new ArrayList<>(), ""
                    );

                    try {
                        userBooking = new userBookingService(userToLogin);
                        if (userBooking.loginUser()) {
                            System.out.println("Login successful!");
                        } else {
                            System.out.println("Login failed. Please check your credentials.");
                            userBooking = null; // don't keep using a failed session
                        }
                    } catch (IOException e) {
                        System.out.println("Error during login.");
                        e.printStackTrace();
                    }
                    break;
                case 3:
                    System.out.println("Fetching your bookings...");
                    userBooking.fetchBookings();
                    break;

                case 4:
                    System.out.println("Enter your source station: ");
                    String source = sc.next();
                    System.out.println("Enter your destination station: ");
                    String destination = sc.next();
                    List<Train> trainList = userBooking.getTrains(source, destination);
                    int index = 1;
                    for(Train t : trainList) {
                        System.out.println(index + " Train Id: " + t.getTrainId());
                        for (Map.Entry<String, String> entry : t.getStationTimes().entrySet()) {
                            System.out.println("station: " + entry.getKey() + " time: " + entry.getValue());
                        }
                        index++;
                    }
                    System.out.println("Select a train by its number (1,2,3..): ");
                    int choice = sc.nextInt();
                    if (choice < 1 || choice > trainList.size()) {
                        System.out.println("Invalid selection.");
                    } else {
                        trainSelectedForBooking = trainList.get(choice - 1);
                        System.out.println("Train selected successfully, Go to option 5 and book a seat: ");
                    }
                    break;

                case 5:
                    if (trainSelectedForBooking == null) {
                        System.out.println("Please search and select a train first (Option 4).");
                        break;
                    }
                    System.out.println("Select a seat out of these seats: ");
                    List<List<Integer>> seats = userBooking.fetchSeats(trainSelectedForBooking);
                    for(List<Integer> row : seats){
                        for(Integer val : row){
                            System.out.print(val+" ");
                        }
                        System.out.println();
                    }
                    System.out.println("Enter the row and column of the seat you want: ");
                    System.out.println("Enter the row: ");
                    int row = sc.nextInt();
                    System.out.println("Enter the column: ");
                    int column = sc.nextInt();
                    userBooking.bookTrainSeat(trainSelectedForBooking, row, column);
                    System.out.println("Booking your seat...");
                    break;

                case 6:
                    System.out.println("Enter your ticketId to cancel the booking: ");
                    String ticketToCancel = sc.next();
                    userBooking.cancelBooking(ticketToCancel);
                    break;
            }
        }

    }
}
